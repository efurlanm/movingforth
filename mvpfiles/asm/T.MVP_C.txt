*/MVP/C  9/20/82
*
*    '0'  ( --- 0 )
*
         HEX   81
         ASC   "0"
         DA    SLMOD-7
ZERO     DA    DOCONST
         HEX   0000
*
*    '0<' ( N --- F )
*
         HEX   82
         DCI   '0<'
         DA    ZERO-4
ZLESS    DA    ZLESS+2
         ASL   $1,X
         TYA
         ROL
         STY   $1,X
         STA   $0,X
         JMP   NEXT
*
*    '0='  ( N --- F )
*
         HEX   82
         DCI   '0='
         DA    ZLESS-5
ZEQUAL   DA    *+2
         LDA   $00,X
         ORA   $01,X
         STY   $01,X
         BNE   ZEQUAL1
         INY
ZEQUAL1  STY   $00,X
         JMP   NEXT
*
*   '0>'  ( N --- F )
*
         HEX   82
         DCI   '0>'
         DA    ZEQUAL-5
ZGREAT   DA    DOCOLON
         DA    ZERO
         DA    GREATER
         DA    EXIT
*
*    '0BRANCH' ( F --- )
*
         HEX   87
         DCI   '0BRANCH'
         DA    ZGREAT-5
ZBRANCH  DA    ZBRANCH+2
         INX
         INX
         LDA   $FE,X
         ORA   $FF,X
         BEQ   ZBRAN3
ZBRAN1   CLC
         LDA   IP
         ADC   #2
         STA   IP
         BCC   ZBRAN2
         INC   IP+1
ZBRAN2   JMP   NEXT
ZBRAN3   JMP   BRANCH+2
*
*    '1'  ( --- 1 )
*
         HEX   81
         ASC   "1"
         DA    ZBRANCH-10
ONE      DA    DOCONST
         HEX   0100
*
*    '1+'  ( N --- N+1 )
*
         HEX   82
         DCI   '1+'
         DA    ONE-4
ONEP     DA    DOCOLON
         DA    ONE
         DA    PLUS
         DA    EXIT
*
*    '1-'  ( N --- N-1 )
*
         HEX   82
         DCI   '1-'
         DA    ONEP-5
ONEM     DA    DOCOLON
         DA    ONE
         DA    SUB
         DA    EXIT
*
*    '13/16RWTS'  ( ADDR R/W DRV SECT TRK NPAGES ---, )
*
         HEX   89
         DCI   '13/16RWTS'
         DA    ONEM-5
RWTS36   DA    DOCOLON
         DA    SPT
         DA    LIT
         HEX   0D00
         DA    EQUAL
         DA    ZBRANCH
         DFB   RWTS361-*,00
         DA    RWTS13
         DA    BRANCH
         DFB   RWTS362-*,00
RWTS361  DA    RWTS16
RWTS362  DA    QDUP
         DA    ZBRANCH
         DFB   RWTS363-*,00
         DA    IOERR
RWTS363  DA    EXIT
*
*    '13RWTS'  ( ADDR R/W DRV SEC TRK NPAGES ---, )
*
         HEX   86
         DCI   '13RWTS'
         DA    RWTS36-12
RWTS13   DA    *+2
         JSR   RWTSCOM
         STY   $B7ED      IBSECT
         STA   $B7F1      IBBUFR,HI
RWTS131  JSR   RWTS
         INC   $B7F1      IBBUFR,HI
         LDY   $B7ED      IBSECT
         INY
         CPY   #$0D
         BNE   RWTS132
         LDY   #$00
         INC   $B7EC      IBTRK
RWTS132  STY   $B7ED      IBSECT
         DEC   N
         BNE   RWTS131
         LDX   XSAVE
         JMP   NEXT
*
*    '16RWTS'  ( ADDR R/W DRV SEC TRK NPAGES ---, )
*
         HEX   86
         DCI   '16RWTS'
         DA    RWTS13-9
RWTS16   DA    *+2
         JSR   RWTSCOM
         DEC   N
         CLC
         ADC   N
         STA   $B7F1      IBBUFR,HI
         TYA
         ADC   N
         INC   N
RWTS161  CMP   #$10
         BCC   RWTS162
         SBC   #$10
         INC   $B7EC      IBTRK
         JMP   RWTS161
RWTS162  STA   $B7ED      IBSECT
RWTS163  JSR   RWTS
         DEC   $B7F1      IBBUFR,HI
         DEC   $B7ED      IBSECT
         BPL   RWTS164
         LDY   #$0F
         STY   $B7ED      IBSECT
         DEC   $B7EC      IBTRK
RWTS164  DEC   N
         BNE   RWTS163
         LDX   XSAVE
         JMP   NEXT
*
*    RWTSCOM  SUB/ROUTINE
*
RWTSCOM  STY   $B7EB      IBVOL
         TXA
         CLC
         ADC   #$0A
         STA   XSAVE
         LDA   $00,X
         STA   N
         LDA   $02,X
         STA   $B7EC      IBTRK
         LDA   $06,X
         STA   $B7EA      IBDRVN
         LDY   $08,X
         BNE   RWTSCO1
         INY
         INY
RWTSCO1  STY   $B7F4      IBCMD
         LDA   $0A,X
         STA   $B7F0      IBBUFR,LO
         LDA   $0B,X
         LDY   #$00
         STY   $0A,X
         STY   $0B,X
         LDY   $04,X
         RTS
*
*    RWTS  SUB/ROUTINE
*
RWTS     LDA   #$B7
         LDY   #$E8
         JSR   $BD00
         BCC   RWTS1
         LDX   XSAVE
         LDA   $B7F5
         STA   $00,X
         JMP   NEXT
RWTS1    RTS
*
*    '2'  ( --- 2 )
*
         HEX   81
         ASC   "2"
         DA    RWTS16-9
TWO      DA    DOCONST
         HEX   0200
*
*    '2*'  ( N1 --- N2 )
*
         HEX   82
         DCI   '2*'
         DA    TWO-4
TWOSTAR  DA    DOCOLON
         DA    TWO
         DA    STAR
         DA    EXIT
*
*    '2+'  ( N --- N+2 )
*
         HEX   82
         DCI   '2+'
         DA    TWOSTAR-5
TWOP     DA    DOCOLON
         DA    TWO
         DA    PLUS
         DA    EXIT
*
*    '2-'  ( N --- N-1 )
*
         HEX   82
         DCI   '2-'
         DA    TWOP-5
TWOM     DA    DOCOLON
         DA    TWO
         DA    SUB
         DA    EXIT
*
*    '79-STANDARD'  ( --- )
*
         HEX   8B
         DCI   '79-STANDARD'
         DA    TWOM-5
STNDRD   DA    DOCOLON
         DA    EXIT
*
*    ':'
*
         HEX   81
         ASC   ":"
         DA    STNDRD-14
COLON    DA    DOCOLON
         DA    SPAT
         DA    CSP
         DA    STORE
         DA    CURRENT
         DA    AT
         DA    CONTEXT
         DA    STORE
         DA    CREATE
         DA    SMUDGE
         DA    RBRAC
         DA    ASCODEA
DOCOLON  LDA   IP+1       GET IP AND
         PHA              ; PUSH ONTO
         LDA   IP          MACHINE STACK.
         PHA
         CLC              ;GET W AND ADD
         LDA   W          TWO, THEN
         ADC   #2         STORE IN IP.
         STA   IP
         TYA
         ADC   W+1
         STA   IP+1
         JMP   NEXT
*
*    ';'
*
         HEX   C1
         ASC   ";"
         DA    COLON-4
SEMICOL  DA    DOCOLON
         DA    QCSP
         DA    COMPILE
         DA    EXIT
         DA    SMUDGE
         DA    LBRAC
         DA    EXIT
*
*    '<' ( N1 N2 --- F )
*
         HEX   81
         ASC   "<"
         DA    SEMICOL-4
LESS     DA    LESS+2
         SEC
         LDA   $2,X
         SBC   $0,X       SUBTRACT
         LDA   $3,X
         SBC   $1,X
         STY   $3,X       ZERO HI-BYTE
         BVC   LESS1
         EOR   #$80       CORRECT OVERFLOW
LESS1    BPL   LESS2
         INY              ;INVERT BOOLEAN
LESS2    STY   $2,X       LEAVE BOOLEAN
         JMP   POP
*
*    '<#'  ( D1 --- D2 )
*
         HEX   82
         DCI   '<#'
         DA    LESS-4
LESSHRP  DA    DOCOLON
         DA    PAD
         DA    HLD
         DA    STORE
         DA    EXIT
*
*    '<+LOOP>' ( N --- )
*
         HEX   87
         DCI   '<+LOOP>'
         DA    LESSHRP-5
APLOOPA  DA    APLOOPA+2
         INX
         INX
         STX   XSAVE
         LDA   $FF,X
         PHA
         PHA
         LDA   $FE,X
         TSX
         INX
         INX
         CLC
         ADC   $0101,X
         STA   $0101,X
         PLA
         ADC   $0102,X
         STA   $0102,X
         PLA
         BPL   APLOOP1
         LDA   $0101,X    
         SBC   $0103,X
         LDA   $0102,X
         SBC   $0104,X
         JMP   ALOOPA2
APLOOP1  JMP   ALOOPA1
*
*    '<-FIND>'  ( --- PFA B TF )
*               ( --- FF )
*
         HEX   87
         DCI   '<-FIND>'
         DA    APLOOPA-10
ADFINDA  DA    DOCOLON
         DA    BL
         DA    WORD
         DA    CONTEXT
         DA    AT
         DA    AT
         DA    AFINDA
         DA    EXIT
*
*    '<.">'  ( --- )
*
         HEX   84
         DCI   '<.">'
         DA    ADFINDA-10
ADOTQA   DA    DOCOLON
         DA    RAT
         DA    COUNT
         DA    DUP
         DA    ONEP
         DA    RFROM
         DA    PLUS
         DA    TOR
         DA    TYPE
         DA    EXIT
*
*    '</LOOP>' ( N --- )
*
         HEX   87
         DCI   '</LOOP>'
         DA    ADOTQA-7
AUPLOOP  DA    APLOOPA+2
         INX
         INX
         STX   XSAVE
         LDA   $FF,X
         PHA
         LDA   $FE,X
         TSX
         INX
         INX
         CLC
         ADC   $0101,X
         STA   $0101,X
         PLA
         ADC   $0102,X
         STA   $0102,X
         JMP   ALOOPA1
*
*    '<;CODE>'
*
         HEX   87
         DCI   '<;CODE>'
         DA    AUPLOOP-10
ASCODEA  DA    DOCOLON
         DA    RFROM
         DA    LATEST
         DA    PFA
         DA    TWO
         DA    SUB
         DA    STORE
         DA    EXIT
*
*    '<<CMOVE>'  ( ADDR1 ADDR2 U --- )
*
         HEX   88
         DCI   '<<CMOVE>'
         DA    ASCODEA-10
AACMOVE  DA    *+2
         LDA   #03
         JSR   SETUPN
         LDY   N
         BNE   AACMOV1
         DEC   N+1
AACMOV1  CLC
         LDA   N+3
         ADC   N+1
         STA   N+3
         CLC
         LDA   N+5
         ADC   N+1
         STA   N+5
         DEY
AACMOV2  BEQ   AACMOV3
         LDA   (N+4),Y
         STA   (N+2),Y
         DEY
         JMP   AACMOV2
AACMOV3  LDA   (N+4),Y
         STA   (N+2),Y
         LDA   N+1
         BEQ   AACMOV4
         DEC   N+3
         DEC   N+5
         DEC   N+1
         LDY   #$FF
         JMP   AACMOV2
AACMOV4  JMP   NEXT
*
*    '<?TERMINAL>' ( --- F )
*
         HEX   8B
         DCI   '<?TERMINAL>'
         DA    AACMOVE-11
AQTERMA  DA    AQTERMA+2
         BIT   $C000
         BPL   AQTERM2
AQTERM1  BIT   $C010
         BIT   $C000
         BMI   AQTERM1
         INY
AQTERM2  TYA
         JMP   PUSH0A
*
*    '<ABORT>'  ( --- )
*
         HEX   87
         DCI   '<ABORT>'
         DA    AQTERMA-14
AABORTA  DA    DOCOLON
         DA    SPSTORE
         DA    QSTACK
         DA    FORTH
         DA    DEFINIT
         DA    QUIT
         DA    EXIT
*
*    '<ABORT">'  ( F --- )
*
         HEX   88
         DCI   /<ABORT">/
         DA    AABORTA-10
AABORTQ  DA    DOCOLON
         DA    ZBRANCH
         DFB   AABORT1-*,00
         DA    WHERE
         DA    CR
         DA    RAT
         DA    COUNT
         DA    TYPE
         DA    SPSTORE
         DA    QUIT
         DA    BRANCH
         DFB   AABORT2-*,00
AABORT1  DA    RFROM
         DA    DUP
         DA    CAT
         DA    PLUS
         DA    ONEP
         DA    TOR
AABORT2  DA    EXIT
*
*    '<BLOCK>'  ( N --- ADDR )
*
         HEX   87
         DCI   '<BLOCK>'
         DA    AABORTQ-11
ABLOCKA  DA    DOCOLON
         DA    OFFSET
         DA    AT
         DA    PLUS
         DA    TOR
         DA    PREV
         DA    AT
         DA    DUP
         DA    AT
         DA    RAT
         DA    SUB
         DA    TWOSTAR
         DA    ZBRANCH
         DFB   ABLOCK3-*,00
ABLOCK1  DA    PBUF
         DA    NOT
         DA    ZBRANCH
         DFB   ABLOCK2-*,00
         DA    DROP
         DA    RAT
         DA    BUFFER
         DA    DUP
         DA    RAT
         DA    ONE
         DA    RSLW
         DA    TWO
         DA    SUB
ABLOCK2  DA    DUP
         DA    AT
         DA    RAT
         DA    SUB
         DA    TWOSTAR
         DA    NOT
         DA    ZBRANCH
         DFB   ABLOCK1-*,>ABLOCK1-*
         DA    DUP
         DA    PREV
         DA    STORE
ABLOCK3  DA    RFROM
         DA    DROP
         DA    TWOP
         DA    EXIT
