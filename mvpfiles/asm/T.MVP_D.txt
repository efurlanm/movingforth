*/ MVP/D  9/20/82
*
*    '<CMOVE'  ( ADDR1 ADDR2 N --- )
*
         HEX   86
         DCI   '<CMOVE'
         DA    ABLOCKA-10
ACMOVE   DA    DOCOLON
         DA    DUP
         DA    ONE
         DA    LESS
         DA    ZBRANCH
         DFB   ACMOV1-*,00
         DA    DDROP
         DA    DROP
         DA    BRANCH
         DFB   ACMOV2-*,00
ACMOV1   DA    AACMOVE
ACMOV2   DA    EXIT
*
*    '<CMOVE>' ( FROM TO COUNT --- )
*
         HEX   87
         DCI   '<CMOVE>'
         DA    ACMOVE-9
ACMOVEA  DA    ACMOVEA+2
         LDA   #3
         JSR   SETUPN
ACMOVE1  CPY   N
         BNE   ACMOVE2
         DEC   N+1
         BPL   ACMOVE2
         JMP   NEXT
ACMOVE2  LDA   (N+4),Y
         STA   (N+2),Y
         INY
         BNE   ACMOVE1
         INC   N+5
         INC   N+3
         JMP   ACMOVE1
*
*    '<CR>'
*
         HEX   84
         DCI   '<CR>'
         DA    ACMOVEA-10
ACRA     DA    ACRA+2
         JSR   CROUT
         JMP   NEXT
*
*    '<DO>'
*
         HEX   84
         DCI   '<DO>'
         DA    ACRA-7
ADOA     DA    ADOA+2
         LDA   $3,X
         PHA
         LDA   $2,X
         PHA
         LDA   $1,X
         PHA
         LDA   $0,X
         PHA
POPTWO   INX
         INX
POP      INX
         INX
         JMP   NEXT
*
*    '<EMIT>' ( C --- )
*
         HEX   86
         DCI   '<EMIT>'
         DA    ADOA-7
AEMITA   DA    AEMITA+2
         LDA   $00,X
         ORA   #$80
         JSR   COUT
         INC   UAREA+$4A
         JMP   POP
*
*    '<EXPECT>'  ( ADDR N --- )
*
         HEX   88
         DCI   '<EXPECT>'
         DA    AEMITA-9
AEXPCTA  DA    DOCOLON
         DA    OVER
         DA    PLUS
         DA    OVER
         DA    ADOA
AEXPCT1  DA    KEY
         DA    DUP
         DA    LIT
         HEX   0800
         DA    EQUAL
         DA    OVER
         DA    LIT
         HEX   7F00
         DA    EQUAL
         DA    OR
         DA    ZBRANCH
         DFB   AEXPCT4-*,00
         DA    DROP
         DA    DUP
         DA    I
         DA    EQUAL
         DA    DUP
         DA    RFROM
         DA    TWOM
         DA    PLUS
         DA    TOR
         DA    ZBRANCH
         DFB   AEXPCT2-*,00
         DA    LIT
         HEX   0700
         DA    BRANCH
         DFB   AEXPCT3-*,00
AEXPCT2  DA    LIT
         HEX   0800
         DA    DUP
         DA    EMIT
         DA    LIT
         HEX   2000
         DA    EMIT
AEXPCT3  DA    BRANCH
         DFB   AEXPCT7-*,00
AEXPCT4  DA    DUP
         DA    LIT
         HEX   0D00
         DA    EQUAL
         DA    ZBRANCH
         DFB   AEXPCT5-*,00
         DA    LEAVE
         DA    DROP
         DA    BL
         DA    ZERO
         DA    BRANCH
         DFB   AEXPCT6-*,00
AEXPCT5  DA    DUP
AEXPCT6  DA    I
         DA    CSTORE
         DA    ZERO
         DA    I
         DA    ONEP
         DA    STORE
AEXPCT7  DA    EMIT
         DA    ONE
         DA    AUPLOOP
         DFB   AEXPCT1-*,>AEXPCT1-*
         DA    DROP
         DA    EXIT
*
*    '<FILL>'  ( ADDR N B --- )
*
         HEX   86
         DCI   '<FILL>'
         DA    AEXPCTA-11
AFILLA   DA    DOCOLON
         DA    SWAP
         DA    TOR
         DA    OVER
         DA    CSTORE
         DA    DUP
         DA    ONEP
         DA    RFROM
         DA    ONE
         DA    SUB
         DA    CMOVE
         DA    EXIT
*
*    '<FIND>' ( ADDR1 ADDR2 --- PFA B TF )
*             ( ADDR1 ADDR2 --- FF )
*
         HEX   86
         DCI   '<FIND>'
         DA    AFILLA-9
AFINDA   DA    AFINDA+2
         LDA   #2
         JSR   SETUPN
         STX   XSAVE
AFINDA1  LDY   #0
         LDA   (N),Y
         EOR   (N+2),Y
         AND   #$3F
         BNE   AFINDA4
AFINDA2  INY
         LDA   (N),Y
         EOR   (N+2),Y
         ASL
         BNE   AFINDA3
         BCC   AFINDA2
         LDX   XSAVE
         DEX
         DEX
         DEX
         DEX
         CLC
         TYA
         ADC   #5
         ADC   N
         STA   $2,X
         LDY   #0
         TYA
         ADC   N+1
         STA   $3,X
         STY   $1,X
         LDA   (N),Y
         STA   $0,X
         LDA   #1
         PHA
         JMP   PUSH
AFINDA3  BCS   AFINDA5
AFINDA4  INY
         LDA   (N),Y
         BPL   AFINDA4
AFINDA5  INY
         LDA   (N),Y
         TAX
         INY
         LDA   (N),Y
         STA   N+1
         STX   N
         ORA   N
         BNE   AFINDA1
         LDX   XSAVE
         LDA   #0
         PHA
         JMP   PUSH       EXIT FALSE UPON NULL LINK
*
*    '<INTERPRET>'  ( --- )
*
         HEX   8B
         DCI   '<INTERPRET>'
         DA    AFINDA-9
AINTERP  DA    DOCOLON
AINTER1  DA    DFIND
         DA    ZBRANCH
         DFB   AINTER4-*,00
         DA    STATE
         DA    AT
         DA    LESS
         DA    ZBRANCH
         DFB   AINTER2-*,00
         DA    CFA
         DA    COMMA
         DA    BRANCH
         DFB   AINTER3-*,00
AINTER2  DA    CFA
         DA    EXECUTE
AINTER3  DA    BRANCH
         DFB   AINTER6-*,00
AINTER4  DA    HERE
         DA    NUMBER
         DA    DPL
         DA    AT
         DA    ONEP
         DA    ZBRANCH
         DFB   AINTER5-*,00
         DA    DLITERL
         DA    BRANCH
         DFB   AINTER6-*,00
AINTER5  DA    DROP
         DA    LITERAL
AINTER6  DA    QSTACK
         DA    BRANCH
         DFB   AINTER1-*,>AINTER1-*
         DA    EXIT
*
*    '<KEY>' ( --- C )
*
         HEX   85
         DCI   '<KEY>'
         DA    AINTERP-14
AKEYA    DA    AKEYA+2
         JSR   RDKEY
         CMP   #$95       TRAP 'CNTL U' THE
         BNE   KEY1        APPLE '->' KEY
         LDA   #$DB       & CHANGE TO '['
KEY1     AND   #$7F
         JMP   PUSH0A
*
*    '<LINE>'  ( N1 N2 --- ADDR COUNT )
*
         HEX   86
         DCI   '<LINE>'
         DA    AKEYA-8
ALINEA   DA    DOCOLON
         DA    BLOCK
         DA    SWAP
         DA    CSLL
         DA    STAR
         DA    PLUS
         DA    CSLL
         DA    EXIT
*
*    '<LOAD>'  ( N --- )
*
         HEX   86
         DCI   '<LOAD>'
         DA    ALINEA-9
ALOADA   DA    DOCOLON
         DA    QDUP
         DA    NOT
         DA    AABORTQ
         HEX   0A
         ASC   'UNLOADABLE'
         DA    BLK
         DA    AT
         DA    TOR
         DA    TOIN
         DA    AT
         DA    TOR
         DA    ZERO
         DA    TOIN
         DA    STORE
         DA    BLK
         DA    STORE
         DA    INTRPRT
         DA    RFROM
         DA    TOIN
         DA    STORE
         DA    RFROM
         DA    BLK
         DA    STORE
         DA    EXIT
*
*    '<LOOP>'
*
         HEX   86
         DCI   '<LOOP>'
         DA    ALOADA-9
ALOOPA   DA    ALOOPA+2
         STX   XSAVE
         TSX
         INC   $0101,X
         BNE   ALOOPA1
         INC   $0102,X
ALOOPA1  CLC
         LDA   $0103,X
         SBC   $0101,X
         LDA   $0104,X
         SBC   $0102,X
ALOOPA2  LDX   XSAVE
         ASL
         BCC   ALOOPA3
         PLA
         PLA
         PLA
         PLA
         JMP   ZBRAN1
ALOOPA3  JMP   BRANCH+2
*
*    '<NUMBER>'  ( ADDR --- D )
*
         HEX   88
         DCI   '<NUMBER>'
         DA    ALOOPA-9
ANUMBER  DA    DOCOLON
         DA    ZERO
         DA    ZERO
         DA    ROT
         DA    DUP
         DA    ONEP
         DA    CAT
         DA    LIT
         HEX   2D00       AMINUS= ASCII "-"
         DA    EQUAL
         DA    DUP
         DA    TOR
         DA    PLUS
         DA    LIT
         HEX   FFFF
         DA    DPL
         DA    STORE
         DA    CONVERT
         DA    DUP
         DA    CAT
         DA    BL
         DA    GREATER
         DA    ZBRANCH
         DFB   ANUMBE1-*,00
         DA    DUP
         DA    CAT
         DA    LIT
         HEX   2E00       ADOT= ASCII "."
         DA    EQUAL
         DA    NOT
         DA    AABORTQ
         HEX   0E
         ASC   'NOT RECOGNIZED'
         DA    ZERO
         DA    DPL
         DA    STORE
         DA    CONVERT
         DA    DUP
         DA    CAT
         DA    BL
         DA    GREATER
         DA    AABORTQ
         HEX   0E
         ASC   'NOT RECOGNIZED'
ANUMBE1  DA    DROP
         DA    RFROM
         DA    ZBRANCH
         DFB   ANUMBE2-*,00
         DA    DNEGATE
ANUMBE2  DA    EXIT
*
*    '<PAGE>'  ( --- )
*
         HEX   86
         DCI   '<PAGE>'
         DA    ANUMBER-11
APAGEA   DA    *+2
         JSR   $FC58      APPLE'S HOME
         JMP   NEXT
*
*    '<R/W>'  ( ADDR BLK F --- )
*
         HEX   85
         DCI   '<R/W>'
         DA    APAGEA-9
ARSLWA   DA    DOCOLON
         DA    SWAP       TEST ABS BLK
         DA    DUP         VS MAX BLKS
         DA    MAXBLKS
         DA    GREATER
         DA    OVER       TEST ABS BLK
         DA    ZLESS       NOT NEGATIVE.
         DA    OR         COMBINE FLAGS.
         DA    ZBRANCH
         DFB   ARSLWA1-*,00
         DA    CR         ABNORMAL EXIT
         DA    ADOTQA      PROCEDURE
         HEX   0D
         ASC   'BLK NO. ERROR'
         DA    DROP
         DA    DROP
         DA    DROP
         DA    QUIT
ARSLWA1  DA    BPDRV      CALC BLKS PER SLOT
         DA    TWO
         DA    STAR
         DA    SLMOD      RELATIVE SLOT
         DA    LIT         TIMES 16
         HEX   1000
         DA    STAR
         DA    BOOTSLT    GET ABS SLOT*16
         DA    AT          NUMBER AND
         DA    SWAP        ADJUST DOWNWARD
         DA    SUB         BY RELATIVE*16
         DA    IBSLOT     AND SET IBSLOT.
         DA    STORE
         DA    DUP        TEST SLOT BLK
         DA    BPDRV       FOR WHICH
         DA    LESS        DRIVE IT IS
         DA    ZBRANCH     LOCATED IN.
         DFB   ARSLWA2-*,00
         DA    ONE        IT'S IN DRIVE #1
         DA    SWAP
         DA    BRANCH
         DFB   ARSLWA3-*,00
ARSLWA2  DA    TWO        IT'S IN DRIVE #2
         DA    SWAP
         DA    BPDRV
         DA    SUB
ARSLWA3  DA    LIT        CONVERT RELATIVE
         HEX   0400        BLK TO ABS
         DA    STAR        SECTOR AND
         DA    SPT        THEN CONVERT TO
         DA    SLMOD       TRACK & TRK'S SECTOR
         DA    LIT
         HEX   0400       SELECT 4 PAGES
         DA    RWTS36     AND R/W THEM TO BUFFER
         DA    BOOTSLT    RESET RWTS
         DA    AT          IBSLOT
         DA    IBSLOT      TO THAT
         DA    STORE       ON COLD ENTERY.
         DA    EXIT
*
*    '<SAVE-FORTH>'  ( --- )
*
         HEX   8C
         DCI   '<SAVE-FORTH>'
         DA    ARSLWA-8
ASVFRTH  DA    DOCOLON
         DA    FORTH
         DA    DEFINIT
         DA    FREEZE
         DA    SIZE
         DA    SPT
         DA    LIT
         HEX   1000
         DA    EQUAL
         DA    ZBRANCH
         DFB   ASVFRT1-*,00
*
         DA    NPAGES     MODIFY BOOTS 1 & 2
         DA    CAT         PARAMETERS FOR
         DA    DUP         DIRECT (SLAVE TYPE)
         DA    LIT         LOAD OF BOOTS
         HEX   0008        1 & 2 PROCEDURES,
         DA    ZERO        PLUS APPLE RWTS
         DA    LIT         AND FORTH IMAGE.
         HEX   0001
         DA    USLMOD     THESE MODIFIED BOOTS
         DA    SWAP        WILL END WITH
         DA    DROP        DIRECT JUMP TO
         DA    PLUS        FORTH AT $800.
         DA    LIT
         HEX   E7B7
         DA    CSTORE
         DA    LIT
         HEX   0F00
         DA    PLUS
         DA    LIT
         HEX   1000
         DA    SLMOD
         DA    LIT
         HEX   15B7
         DA    CSTORE
         DA    LIT
         HEX   1AB7
         DA    CSTORE
         DA    BRANCH
         DFB   ASVFRT2-*,00
ASVFRT1  DA    SPT
         DA    LIT
         HEX   0D00
         DA    EQUAL
         DA    ZEQUAL
         DA    AABORTQ
         HEX   0D
         ASC   'SEC/TRK ERROR'
         DA    ONE
         DA    LIT
         HEX   15B7
         DA    CSTORE
         DA    ZERO
         DA    LIT
         HEX   E2B7
         DA    CSTORE
         DA    LIT
         HEX   0800
         DA    LIT
         HEX   E3B7
         DA    CSTORE
         DA    NPAGES
         DA    CAT
         DA    LIT
         HEX   E0B7
         DA    CSTORE
ASVFRT2  DA    LIT
         HEX   0008
         DA    LIT
         HEX   48B7
         DA    STORE
         DA    LIT
*
         HEX   00B6       BOOT 1 & 2
         DA    ZERO       WRITE TO
         DA    ONE        DRIVE #1
         DA    ZERO       SECTOR #0
         DA    ZERO       TRACK #0
         DA    LIT
         HEX   0A00       10 PAGES LONG.
         DA    RWTS36
*
         DA    LIT
         HEX   0008       FORTH IMAGE
         DA    ZERO       WRITE TO
         DA    ONE        DRIVE #1
         DA    ZERO       SECTOR #0
         DA    ONE        TRACK #1
         DA    NPAGES     NPAGES LONG.
         DA    CAT
         DA    RWTS36
         DA    EXIT
*
*    '<WORD>'  ( CHAR --- ADDR )
*
         HEX   86
         DCI   '<WORD>'
         DA    ASVFRTH-15
AWORDA   DA    DOCOLON
         DA    TSTREAM
         DA    SWAP
         DA    ENCLOSE
         DA    DDUP
         DA    GREATER
         DA    ZBRANCH
         DFB   AWORDA1-*,00
         DA    DDROP
         DA    DDROP
         DA    ZERO
         DA    HERE
         DA    STORE
         DA    BRANCH
         DFB   AWORDA2-*,00
AWORDA1  DA    TOIN
         DA    PSTORE
         DA    OVER
         DA    SUB
         DA    DUP
         DA    TOR
         DA    HERE
         DA    CSTORE
         DA    PLUS
         DA    HERE
         DA    ONEP
         DA    RFROM
         DA    DUP
         DA    LIT
         HEX   FF00
         DA    GREATER
         DA    AABORTQ
         HEX   0B
         ASC   'INPUT > 255'
         DA    ONEP
         DA    CMOVE
AWORDA2  DA    HERE
         DA    EXIT
