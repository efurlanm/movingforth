*/MVP/E  2/20/83
*
*    '<VOCABULARY79>'
*
         HEX   8E
         DCI   '<VOCABULARY79>'
         DA    AWORDA-9
AVOCB79  DA    DOCOLON
         DA    CREATE
         DA    LIT
         HEX   81A0
         DA    COMMA
         DA    LIT
         DA    FORTH+2
         DA    COMMA
         DA    HERE
         DA    VOCLINK
         DA    AT
         DA    COMMA
         DA    VOCLINK
         DA    STORE
         DA    ASCODEA
DOVOCAB  JSR   DODOES
         DA    TWOP
         DA    CONTEXT
         DA    STORE
         DA    EXIT
*
*    '<VOCABULARYFIG>'
*
         HEX   8F
         DCI   '<VOCABULARYFIG>'
         DA    AVOCB79-17
AVOCBFG  DA    DOCOLON
         DA    CREATE
         DA    LIT
         HEX   81A0
         DA    COMMA
         DA    CURRENT
         DA    AT
         DA    CFA
         DA    COMMA
         DA    HERE
         DA    VOCLINK
         DA    AT
         DA    COMMA
         DA    VOCLINK
         DA    STORE
         DA    ASCODEA
DOVOCFG  JSR   DODOES
         DA    TWOP
         DA    CONTEXT
         DA    STORE
         DA    EXIT
*
*    '='  ( N1 N2 --- F )
*
         HEX   81
         ASC   "="
         DA    AVOCBFG-18
EQUAL    DA    DOCOLON
         DA    SUB
         DA    NOT
         DA    EXIT
*
*    '>'  ( N1 N2 --- F )
*
         HEX   81
         ASC   ">"
         DA    EQUAL-4
GREATER  DA    DOCOLON
         DA    SWAP
         DA    LESS
         DA    EXIT
*
*    '>IN'  ( --- ADDR )
*
         HEX   83
         DCI   '>IN'
         DA    GREATER-4
TOIN     DA    DOUSER
         HEX   36
*
*    '>R' ( N --- )
*
         HEX   82
         DCI   '>R'
         DA    TOIN-6
TOR      DA    TOR+2
         LDA   $1,X       MOVE HIGH BYTE
         PHA
         LDA   $0,X       THEN LOW BYTE
         PHA              ;TO RETURN STACK
         INX
         INX              ;POPPING OFF DATA STACK.
         JMP   NEXT
*
*    '?'  ( ADDR --- )
*
         HEX   81
         ASC   "?"
         DA    TOR-5
QUESMRK  DA    DOCOLON
         DA    AT
         DA    DOT
         DA    EXIT
*
*    '?COMP'  ( --- )
*
         HEX   85
         DCI   '?COMP'
         DA    QUESMRK-4
QCOMP    DA    DOCOLON
         DA    STATE
         DA    AT
         DA    NOT
         DA    AABORTQ
         HEX   0D
         ASC   ' COMPILE ONLY'
         DA    EXIT
*
*    '?CONFIGURE'  ( --- )
*
         HEX   8A
         DCI   '?CONFIGURE'
         DA    QCOMP-8
QCONFIG  DA    DOCOLON
         DA    CR
         DA    CR
         DA    MAXDDRV
         DA    DOT
         DA    ADOTQA
         HEX   17         23 CHARACTERS
         ASC   'DRIVES WITH DENSITIES: '
         DA    MAXDDRV
         DA    ZERO
         DA    ADOA
QCONFI1  DA    I
         DA    DRDDEN
         DA    TWO
         DA    SPACES
         DA    DOT
         DA    ALOOPA
         DFB   QCONFI1-*,>QCONFI1-*
         DA    CR
         DA    CR
         DA    ADOTQA
         HEX   0C
         ASC   'DENSITY CODE'
         DA    CR
         DA    ADOTQA
         HEX   0C
         ASC   ' 0 - DOS 3.3'
         DA    CR
         DA    ADOTQA
         HEX   0B
         ASC   ' 1 - 8-SSSD'
         DA    CR
         DA    ADOTQA
         HEX   0B
         ASC   ' 2 - 8-DSSD'
         DA    CR
         DA    ADOTQA
         HEX   0B
         ASC   ' 3 - 8-SSDD'
         DA    CR
         DA    ADOTQA
         HEX   0B
         ASC   ' 4 - 8-DSDD'
         DA    CR
         DA    ADOTQA
         HEX   0C
         ASC   ' 5 - 8-SSEXT'
         DA    CR
         DA    ADOTQA
         HEX   0C
         ASC   ' 6 - 8-DSEXT'
         DA    CR
         DA    EXIT
*
*    '?CSP'  ( --- )
*
         HEX   84
         DCI   '?CSP'
         DA    QCONFIG-13
QCSP     DA    DOCOLON
         DA    SPAT
         DA    CSP
         DA    AT
         DA    SUB
         DA    AABORTQ
         HEX   17
         ASC   'DEFINITION NOT FINISHED'
         DA    EXIT
*
*    '?DUP'  ( N --- N (N) )
*
         HEX   84
         DCI   '?DUP'
         DA    QCSP-7
QDUP     DA    DOCOLON
         DA    DUP
         DA    ZBRANCH
         DFB   QDUP1-*,00
         DA    DUP
QDUP1    DA    EXIT
*
*    '?LOADING'  ( --- )
*
         HEX   88
         DCI   '?LOADING'
         DA    QDUP-7
QLOADNG  DA    DOCOLON
         DA    BLK
         DA    AT
         DA    NOT
         DA    AABORTQ
         HEX   15
         ASC   'USE ONLY WHEN LOADING'
         DA    EXIT
*
*    '?PAIRS'  ( N1 N2 --- )
*
         HEX   86
         DCI   '?PAIRS'
         DA    QLOADNG-11
QPAIRS   DA    DOCOLON
         DA    SUB
         DA    AABORTQ
         HEX   17
         ASC   'CONDITIONALS NOT PAIRED'
         DA    EXIT
*
*    '?STACK'  ( --- )
*
         HEX   86
         DCI   '?STACK'
         DA    QPAIRS-9
QSTACK   DA    DOCOLON
         DA    SPAT
         DA    SZERO
         DA    SWAP
         DA    ULESS
         DA    AABORTQ
         HEX   0B
         ASC   'EMPTY STACK'
         DA    SPAT
         DA    SZERO
         DA    LIT
         HEX   8700
         DA    SUB
         DA    ULESS
         DA    AABORTQ
         HEX   0A
         ASC   'FULL STACK'
         DA    EXIT
*
*    '?STREAM'  ( F --- )
*
         HEX   87
         DCI   '?STREAM'
         DA    QSTACK-9
QSTREAM  DA    DOCOLON
         DA    AABORTQ
         HEX   16
         ASC   'INPUT STREAM EXHAUSTED'
         DA    EXIT
*
*    '?TERMINAL'  ( --- F )
*
         HEX   89
         DCI   '?TERMINAL'
         DA    QSTREAM-10
QTERM    DA    DOCOLON
         DA    TQTERM
         DA    AT
         DA    EXECUTE
         DA    EXIT
*
*    '@' ( ADDR --- N )
*
         HEX   81
         ASC   "@"
         DA    QTERM-12
AT       DA    AT+2
         LDA   (0,X)
         PHA
         INC   $0,X
         BNE   AT1
         INC   $1,X
AT1      LDA   (0,X)
         JMP   PUT
*
*    'ABORT'  ( --- )
*
         HEX   85
         DCI   'ABORT'
         DA    AT-4
ABORT    DA    DOCOLON
         DA    TABORT
         DA    AT
         DA    EXECUTE
         DA    EXIT
*
*    'ABORT"'  ( F --- )
*
         HEX   C6
         DCI   'ABORT"'
         DA    ABORT-8
ABORTQ   DA    DOCOLON
         DA    QCOMP
         DA    COMPILE
         DA    AABORTQ
         DA    TSTREAM
         DA    CAT
         DA    LIT
         HEX   2200
         DA    EQUAL
         DA    ZBRANCH
         DFB   ABORTQ1-*,00
         DA    ONE
         DA    TOIN
         DA    PSTORE
         DA    ZERO
         DA    CCOMMA
         DA    BRANCH
         DFB   ABORTQ2-*,00
ABORTQ1  DA    LIT
         HEX   2200
         DA    WORD
         DA    DUP
         DA    CAT
         DA    ONEP
         DA    SWAP
         DA    OVER
         DA    PLUS
         DA    CAT
         DA    LIT
         HEX   2200
         DA    EQUAL
         DA    NOT
         DA    QSTREAM
         DA    ALLOT
ABORTQ2  DA    EXIT
*
*    'ABS'  ( N1 --- N2 )
*
         HEX   83
         DCI   'ABS'
         DA    ABORTQ-9
ABS      DA    DOCOLON
         DA    DUP
         DA    PM
         DA    EXIT
*
*    'AGAIN'  ( ADDR N --- ) COMPILING
*             ( --- )  RUN-TIME
*
         HEX   C5
         DCI   'AGAIN'
         DA    ABS-6
AGAIN    DA    DOCOLON
         DA    ONE
         DA    QPAIRS
         DA    COMPILE
         DA    BRANCH
         DA    HERE
         DA    SUB
         DA    COMMA
         DA    EXIT
*
*    'ALLOT'  ( N --- )
*
         HEX   85
         DCI   'ALLOT'
         DA    AGAIN-8
ALLOT    DA    DOCOLON
         DA    DP
         DA    PSTORE
         DA    EXIT
*
*    'AND' ( N1 N2 --- N2 )
*
         HEX   83
         DCI   'AND'
         DA    ALLOT-8
ANDD     DA    ANDD+2
         LDA   $0,X
         AND   $2,X
         PHA
         LDA   $1,X
         AND   $3,X
         INX
         INX
         JMP   PUT
*
*    'BASE'  ( --- ADDR )
*
         HEX   84
         DCI   'BASE'
         DA    ANDD-6
BASE     DA    DOUSER
         HEX   38
*
*    'BEGIN'  (  --- ADDR N ) COMPILING
*
         HEX   C5
         DCI   'BEGIN'
         DA    BASE-7
BEGIN    DA    DOCOLON
         DA    QCOMP
         DA    HERE
         DA    ONE
         DA    EXIT
*
*    'BL'  ( --- C )
*
         HEX   82
         DCI   'BL'
         DA    BEGIN-8
BL       DA    DOCONST
         HEX   2000
*
*    'BLANK'  ( ADDR N --- )
*
         HEX   85
         DCI   'BLANK'
         DA    BL-5
BLANK    DA    DOCOLON
         DA    BL
         DA    FILL
         DA    EXIT
*
*    'BLK'  ( --- ADDR )
*
         HEX   83
         DCI   'BLK'
         DA    BLANK-8
BLK      DA    DOUSER
         HEX   3A
*
*    'BLK/DRV'  ( --- ADDR )
*
         HEX   87
         DCI   'BLK/DRV'
         DA    BLK-6
BLKPDRV  DA    DOCREAT
         HEX   8C00       140
         HEX   FA00       250
         HEX   F401       500
         HEX   F401       500
         HEX   E803       1000
         HEX   6802       616
         HEX   D004       1232
*
*    'BLOCK'  ( N --- ADDR )
*
         HEX   85
         DCI   'BLOCK'
         DA    BLKPDRV-10
BLOCK    DA    DOCOLON
         DA    TBLOCK
         DA    AT
         DA    EXECUTE
         DA    EXIT
*
*    'BOOT-SLOT'  ( --- ADDR )
*
         HEX   89
         DCI   'BOOT-SLOT'
         DA    BLOCK-8
BOOTSLT  DA    DOCREAT
         HEX   6000       SLOT #6 * 16
*
*    'BPDRV'  ( --- N )
*
         HEX   85
         DCI   'BPDRV'
         DA    BOOTSLT-12
BPDRV    DA    DOCOLON
         DA    DENSITY
         DA    AT
         DA    LIT
         HEX   0600
         DA    MIN
         DA    TWOSTAR
         DA    BLKPDRV
         DA    PLUS
         DA    AT
         DA    EXIT
*
*    'BRANCH'
*
         HEX   86
         DCI   'BRANCH'
         DA    BPDRV-8
BRANCH   DA    BRANCH+2
         CLC
         LDA   (IP),Y
         ADC   IP
         PHA
         INY
         LDA   (IP),Y
         ADC   IP+1
         STA   IP+1
         PLA
         STA   IP
         JMP   NEXT+2
*
*    'BUFFER'  ( N --- ADDR )
*
         HEX   86
         DCI   'BUFFER'
         DA    BRANCH-9
BUFFER   DA    DOCOLON
         DA    USE
         DA    AT
         DA    DUP
         DA    TOR
         DA    NUMBUFF
         DA    ONEM
         DA    ZGREAT
         DA    ZBRANCH
         DFB   BUFFER2-*,00
BUFFER1  DA    PBUF
         DA    ZBRANCH
         DFB   BUFFER1-*,>BUFFER1-*
         DA    DUP
         DA    USE
         DA    AT
         DA    EQUAL
         DA    ZBRANCH
         DFB   BUFFER2-*,00
         DA    DROP
         DA    PREV
         DA    AT
BUFFER2  DA    USE
         DA    STORE
         DA    RAT
         DA    AT
         DA    ZLESS
         DA    ZBRANCH
         DFB   BUFFER3-*,00
         DA    RAT
         DA    TWOP
         DA    RAT
         DA    AT
         DA    LIT
         HEX   FF7F
         DA    ANDD
         DA    ZERO
         DA    RSLW
BUFFER3  DA    RAT
         DA    STORE
         DA    RAT
         DA    PREV
         DA    STORE
         DA    RFROM
         DA    TWOP
         DA    EXIT
*
*    'BYE'  ( --- )
*
         HEX   83
         DCI   'BYE'
         DA    BUFFER-9
BYE      DA    DOCOLON
         DA    FREEZE
         DA    HERE
         DA    LIT
         DA    ORIGN
         DA    SUB
         DA    ZERO
         DA    LIT
         HEX   0001
         DA    USLMOD
         DA    SWAP
         DA    DROP
         DA    ONEP
         DA    DECIMAL
         DA    CR
         DA    UDOT
         DA    ADOTQA
         HEX   06
         ASC   ' PAGES'
         DA    CR
         DA    GO
         DA    EXIT
*
*    'C!' ( B ADDR --- )
*
         HEX   82
         DCI   'C!'
         DA    BYE-6
CSTORE   DA    CSTORE+2
         LDA   $2,X
         STA   (0,X)
         JMP   POPTWO
*
*    'C,'  ( N --- )
*
         HEX   82
         DCI   'C,'
         DA    CSTORE-5
CCOMMA   DA    DOCOLON
         DA    HERE
         DA    CSTORE
         DA    ONE
         DA    ALLOT
         DA    EXIT
*
*    'C/L'  ( --- N )
*
         HEX   83
         DCI   'C/L'
         DA    CCOMMA-5
CSLL     DA    DOCONST
         HEX   4000
*
*    'C@' ( ADDR --- B )
*
         HEX   82
         DCI   'C@'
         DA    CSLL-6
CAT      DA    CAT+2
         LDA   (0,X)      FETCH BYTE ADDRESSED BY BOTTOM
         STA   $0,X       OF STACK TO STACK, ZEROING
         STY   $1,X       THE HIGH BYTE.
         JMP   NEXT
*
*    'CFA'  ( PFA --- CFA )
*
         HEX   83
         DCI   'CFA'
         DA    CAT-5
CFA      DA    DOCOLON
         DA    TWOM
         DA    EXIT
*
*    'CHANGE'  ( --- )
*
         HEX   86
         DCI   'CHANGE'
         DA    CFA-6
CHANGE   DA    DOCOLON
         DA    LIMIT
         DA    LIT
         HEX   0404
         DA    NUMBUFF
         DA    STAR
         DA    SUB
         DA    LIT
         DA    FIRST+2
         DA    STORE
         DA    FIRST
         DA    USE
         DA    STORE
         DA    FIRST
         DA    PREV
         DA    STORE
         DA    EMPTBUF
         DA    EXIT
*
*    'CLEAR'  ( N --- )
*
         HEX   85
         DCI   'CLEAR'
         DA    CHANGE-9
CLEAR    DA    DOCOLON
         DA    OFFSET
         DA    AT
         DA    PLUS
         DA    BUFFER
         DA    LIT
         HEX   0004
         DA    BL
         DA    FILL
         DA    UPDATE
         DA    EXIT
*
*    'CMOVE'  ( ADDR1 ADDR2 N --- )
*
         HEX   85
         DCI   'CMOVE'
         DA    CLEAR-8
CMOVE    DA    DOCOLON
         DA    DUP
         DA    ONE
         DA    LESS
         DA    ZBRANCH
         DFB   CMOVE1-*,00
         DA    DDROP
         DA    DROP
         DA    BRANCH
         DFB   CMOVE2-*,00
CMOVE1   DA    ACMOVEA
CMOVE2   DA    EXIT
*
*    'COLD'
*
         HEX   84
         DCI   'COLD'
         DA    CMOVE-8
COLD     DA    COLD+2
         LDA   #$FD       RESET APPLE CSW
         STA   $37        AND KSW HOOKS
         STA   $39        FOR 'COUT1' AND
         LDA   #$F0       'KEYIN' FROM
         STA   $36        DOS TO MONITOR.
         LDA   #$1B
         STA   $38
*
         LDA   #<REENTRY  'RESET' VECTOR
         STA   $03F2      TO WARM 'RENTERY'
         LDA   #>REENTRY  AND THE POWER UP
         STA   $03F3      BYTE.
         LDA   #$AD
         STA   $03F4
*
*   BOOT UP DATA
*
         LDY   #$35
         BNE   WARM1
WARM     LDY   #$0F
*
WARM1    LDA   ORIGN+$0A  USER AREA
         STA   UAP         POINTER
         LDA   ORIGN+$0B
         STA   UAP+1
*
WARM2    LDA   ORIGN+$06,Y MOVE LOOP
         STA   (UAP),Y      FOR INTIAL
         DEY              ;  DATA.
         BPL   WARM2
*
         LDA   #>COLDHI+2 SETUP IP FOR HIGH
         STA   IP+1       LEVEL CODE OF 'COLD'
         LDA   #<COLDHI+2 FOR EXECUTION AFTER
         STA   IP         JMP TO 'RPSTORE'
         CLD
         LDA   #$6C       OPCODE FOR INDIRECT
         STA   W-1        JUMPS TO CODE POINTED
         JMP   RPSTORE+2  BY W
COLDHI   DA    DOCOLON
         DA    SPSTORE    FOR APPLES.
         DA    EMPTBUF
         DA    PAGE
         DA    ADOTQA
         HEX   1D
         ASC   'MVP-FORTH APPLE][ '
         ASC   'V1.0103.03 '
         DA    ACRA
         DA    ZERO
         DA    DENSITY
         DA    STORE
         DA    FIRST
         DA    USE
         DA    STORE
         DA    FIRST
         DA    PREV
         DA    STORE
         DA    DR0
         DA    IBSLOT
         DA    CAT
         DA    BOOTSLT
         DA    CSTORE
         DA    ZERO
         DA    EPRINT
         DA    STORE
         DA    INFORTH
         DA    AT
         DA    LIT
         DA    FORTH+4
         DA    STORE
         DA    DECIMAL
         DA    AABORTA
         DA    EXIT
*
*    'COMPILE'  ( --- )
*
         HEX   87
         DCI   'COMPILE'
         DA    COLD-7
COMPILE  DA    DOCOLON
         DA    QCOMP
         DA    RFROM
         DA    DUP
         DA    TWOP
         DA    TOR
         DA    AT
         DA    COMMA
         DA    EXIT
