*/ MVP/H  2/20/83
*
*    'M*'  ( N1 N2 --- D )
*
         HEX   82
         DCI   'M*'
         DA    LOOP-7
MSTAR    DA    DOCOLON
         DA    DDUP
         DA    XOR
         DA    TOR
         DA    ABS
         DA    SWAP
         DA    ABS
         DA    USTAR
         DA    RFROM
         DA    DPM
         DA    EXIT
*
*    'M*/'  ( D1 N1 N2 --- D2 )
*
         HEX   83
         DCI   'M*/'
         DA    MSTAR-5
MSTARSL  DA    DOCOLON
         DA    DDUP
         DA    XOR
         DA    SWAP
         DA    ABS
         DA    TOR
         DA    SWAP
         DA    ABS
         DA    TOR
         DA    OVER
         DA    XOR
         DA    ROT
         DA    ROT
         DA    DABS
         DA    SWAP
         DA    RAT
         DA    USTAR
         DA    ROT
         DA    RFROM
         DA    USTAR
         DA    ROT
         DA    ZERO
         DA    DPLUS
         DA    RAT
         DA    USLMOD
         DA    ROT
         DA    ROT
         DA    RFROM
         DA    USLMOD
         DA    SWAP
         DA    DROP
         DA    SWAP
         DA    ROT
         DA    DPM
         DA    EXIT
*
*    'M+'  ( D1 N --- D2 )
*
         HEX   82
         DCI   'M+'
         DA    MSTARSL-6
MPLUS    DA    DOCOLON
         DA    STOD
         DA    DPLUS
         DA    EXIT
*
*    'M/'  ( D N1 --- N2 N3 )
*
         HEX   82
         DCI   'M/'
         DA    MPLUS-5
MSL      DA    DOCOLON
         DA    OVER
         DA    TOR
         DA    TOR
         DA    DUP
         DA    DPM
         DA    RAT
         DA    ABS
         DA    USLMOD
         DA    RFROM
         DA    RAT
         DA    XOR
         DA    PM
         DA    SWAP
         DA    RFROM
         DA    PM
         DA    SWAP
         DA    EXIT
*
*    'M/MOD'  ( UD1 U2 --- U3 UD4 )
*
         HEX   85
         DCI   'M/MOD'
         DA    MSL-5
MSLMOD   DA    DOCOLON
         DA    TOR
         DA    ZERO
         DA    RAT
         DA    USLMOD
         DA    RFROM
         DA    SWAP
         DA    TOR
         DA    USLMOD
         DA    RFROM
         DA    EXIT
*
*    'MAX'  ( N1 N2 --- N3 )
*
         HEX   83
         DCI   'MAX'
         DA    MSLMOD-8
MAX      DA    DOCOLON
         DA    DDUP
         DA    LESS
         DA    ZBRANCH
         DFB   MAX1-*,00
         DA    SWAP
MAX1     DA    DROP
         DA    EXIT
*
*    'MAX-BLKS'  ( --- N )
*
         HEX   88
         DCI   'MAX-BLKS'
         DA    MAX-6
MAXBLKS  DA    DOCOLON
         DA    ZERO
         DA    MAXDDRV
         DA    ZERO
         DA    ADOA
MAXBLK1  DA    I
         DA    DRDDEN
         DA    DENSITY
         DA    STORE
         DA    BPDRV
         DA    PLUS
         DA    ALOOPA
         DFB   MAXBLK1-*,>MAXBLK1-*
         DA    EXIT
*
*    'MAX-DRV'  ( --- N )
*
         HEX   87
         DCI   'MAX-DRV'
         DA    MAXBLKS-11
MAXDDRV  DA    DOCONST
         HEX   0200
*
*    'MIN'  ( N1 N2 --- N3 )
*
         HEX   83
         DCI   'MIN'
         DA    MAXDDRV-10
MIN      DA    DOCOLON
         DA    DDUP
         DA    GREATER
         DA    ZBRANCH
         DFB   MIN1-*,00
         DA    SWAP
MIN1     DA    DROP
         DA    EXIT
*
*    'MOD'  ( N1 N2 --- N3 )
*
         HEX   83
         DCI   'MOD'
         DA    MIN-6
MOD      DA    DOCOLON
         DA    SLMOD
         DA    DROP
         DA    EXIT
*
*    'MOVE'  ( ADDR1 ADDR2 N --- )
*
         HEX   84
         DCI   'MOVE'
         DA    MOD-6
MOVE     DA    DOCOLON
         DA    ZERO
         DA    MAX
         DA    TWOSTAR
         DA    ACMOVEA
         DA    EXIT
*
*    'NEGATE' ( N --- -N )
*
         HEX   86
         DCI   'NEGATE'
         DA    MOVE-7
NEGATE   DA    NEGATE+2
         SEC
         TYA
         SBC   $0,X
         STA   $0,X
         TYA
         SBC   $1,X
         STA   $1,X
         JMP   NEXT
*
*    'NFA'  ( PFA --- NFA )
*
         HEX   83
         DCI   'NFA'
         DA    NEGATE-9
NFA      DA    DOCOLON
         DA    LIT
         HEX   0500
         DA    SUB
         DA    LIT
         HEX   FFFF
         DA    TRAVERS
         DA    EXIT
*
*    'NOT'
*
         HEX   83
         DCI   'NOT'
         DA    NFA-6
NOT      DA    ZEQUAL+2   SHARE CODE WITH 0=
*
*    'NPAGES'  ( --- ADDR )
*
         HEX   86
         DCI   'NPAGES'
         DA    NOT-6
NPAGES   DA    DOCONST
         HEX   E0B7
*
*    'NUMBER'  ( ADDR --- B )
*
         HEX   86
         DCI   'NUMBER'
         DA    NPAGES-9
NUMBER   DA    DOCOLON
         DA    TNUMBER
         DA    AT
         DA    EXECUTE
         DA    EXIT
*
*    'OFFSET'  ( --- ADDR )
*
         HEX   86
         DCI   'OFFSET'
         DA    NUMBER-9
OFFSET   DA    DOUSER
         HEX   48
*
*    'OR' ( N1 N2 --- OR )
*
         HEX   82
         DCI   'OR'
         DA    OFFSET-9
OR       DA    OR+2       
         LDA   $0,X
         ORA   $2,X
         PHA
         LDA   $1,X
         ORA   $3,X
         INX
         INX
         JMP   PUT
*
*    'OUT'  ( --- ADDR )
*
         HEX   83
         DCI   'OUT'
         DA    OR-5
OUT      DA    DOUSER
         HEX   4A
*
*    'OVER' ( N1 N2 --- N1 N2 N1 )
*
         HEX   84
         DCI   'OVER'
         DA    OUT-6
OVER     DA    OVER+2
         LDA   $2,X
         PHA
         LDA   $3,X
         JMP   PUSH
*
*    'P!'  ( B N --- )
*
         HEX   82
         DCI   'P!'
         DA    OVER-7
PRTSTOR  DA    DOCOLON
         DA    PRSHARP
         DA    EMIT
         DA    ZERO
         DA    PRSHARP
         DA    EXIT
*
*    'P@'  ( N --- B )
*
         HEX   82
         DCI   'P@'
         DA    PRTSTOR-5
PRTAT    DA    DOCOLON
         DA    INSHARP
         DA    KEY
         DA    ZERO
         DA    INSHARP
         DA    EXIT
*
*    'PAD'  ( --- ADDR )
*
         HEX   83
         DCI   'PAD'
         DA    PRTAT-5
PAD      DA    DOCOLON
         DA    HERE
         DA    LIT
         HEX   4400
         DA    PLUS
         DA    EXIT
*
*    'PAGE'  ( --- )
*
         HEX   84
         DCI   'PAGE'
         DA    PAD-6
PAGE     DA    DOCOLON
         DA    TPAGE
         DA    AT
         DA    EXECUTE
         DA    EXIT
*
*    'PFA'  ( NFA --- PFA )
*
         HEX   83
         DCI   'PFA'
         DA    PAGE-7
PFA      DA    DOCOLON
         DA    ONE
         DA    TRAVERS
         DA    LIT
         HEX   0500
         DA    PLUS
         DA    EXIT
*
*    'PICK'  ( N1 --- N2 )
*
         HEX   84
         DCI   'PICK'
         DA    PFA-6
PICK     DA    DOCOLON
         DA    DUP
         DA    ONE
         DA    LESS
         DA    AABORTQ
         HEX   11
         ASC   'PICK ARGUMENT < 1'
         DA    TWOSTAR
         DA    SPAT
         DA    PLUS
         DA    AT
         DA    EXIT
*
*    'PP'  ( N --- <TEXT> )
*
         HEX   82
         DCI   'PP'
         DA    PICK-7
PP       DA    DOCOLON
         DA    DUP
         DA    LIT
         HEX   F0FF
         DA    ANDD
         DA    AABORTQ
         HEX   0A
         ASC   'OFF SCREEN'
         DA    ONE
         DA    TEXT
         DA    PAD
         DA    ONEP
         DA    SWAP
         DA    SCR
         DA    AT
         DA    ALINEA
         DA    CMOVE
         DA    UPDATE
         DA    EXIT
*
*    'PR#'  ( N --- )
*
         HEX   83
         DCI   'PR#'
         DA    PP-5
PRSHARP  DA    DOCOLON
         DA    DUP
         DA    ZBRANCH
         DFB   PRSHAR1-*,00
         DA    LIT
         HEX   C000
         DA    PLUS
         DA    LIT
         HEX   0001
         DA    STAR
         DA    BRANCH
         DFB   PRSHAR2-*,00
PRSHAR1  DA    DROP
         DA    LIT
         DA    COUT1
PRSHAR2  DA    LIT
         DA    CSW
         DA    STORE
         DA    EXIT
*
*    'PREV'  ( --- ADDR )
*
         HEX   84
         DCI   'PREV'
         DA    PRSHARP-6
PREV     DA    DOCREAT
         DA    FIRST
*
*    'QUERY'  ( --- )
*
         HEX   85
         DCI   'QUERY'
         DA    PREV-7
QUERY    DA    DOCOLON
         DA    TIB
         DA    AT
         DA    LIT
         HEX   5000
         DA    EXPECT
         DA    ZERO
         DA    TOIN
         DA    STORE
         DA    EXIT
*
*    'QUIT'  ( --- )
*
         HEX   84
         DCI   'QUIT'
         DA    QUERY-8
QUIT     DA    DOCOLON
         DA    ZERO
         DA    BLK
         DA    STORE
         DA    LBRAC
QUIT1    DA    CR
         DA    RPSTORE
         DA    QUERY
         DA    INTRPRT
         DA    STATE
         DA    AT
         DA    NOT
         DA    ZBRANCH
         DFB   QUIT2-*,00
         DA    ADOTQA
         HEX   02
         ASC   'OK'
QUIT2    DA    BRANCH
         DFB   QUIT1-*,>QUIT1-*
         DA    EXIT
*
*    'R#'  ( --- ADDR )
*
         HEX   82
         DCI   'R#'
         DA    QUIT-7
RSHARP   DA    DOUSER
         HEX   4C
*
*    'R/W'  ( ADDR BLK F --- )
*
         HEX   83
         DCI   'R/W'
         DA    RSHARP-5
RSLW     DA    DOCOLON
         DA    TRSLW
         DA    AT
         DA    EXECUTE
         DA    EXIT
*
*    'R0'  ( --- ADDR )
*
         HEX   82
         DCI   'R0'
         DA    RSLW-6
RZERO    DA    DOUSER
         HEX   08
*
*    'R>' ( --- N )
*
         HEX   82
         DCI   'R>'
         DA    RZERO-5
RFROM    DA    RFROM+2
         DEX              MAKE ROOM ON DATA STACK
         DEX
         PLA              ; HIGH BYTE
         STA   $0,X
         PLA              ; THEN LOW BYTE
         STA   $1,X       RESTORED TO DATA STACK.
         JMP   NEXT
*
*    'R@' ( --- N )
*
         HEX   82
         DCI   'R@'
         DA    RFROM-5
RAT      DA    RAT+2
         STX   XSAVE
         TSX              ; ADDRESS RETURN STACK
         LDA   $0101,X    COPY BOTTOM VALUE
         PHA              ; TO DATA STACK.
         LDA   $0102,X
         LDX   XSAVE
         JMP   PUSH
*
*    'REPEAT'
*
         HEX   C6
         DCI   'REPEAT'
         DA    RAT-5
REPEAT   DA    DOCOLON
         DA    TOR
         DA    TOR
         DA    AGAIN
         DA    RFROM
         DA    RFROM
         DA    TWOM
         DA    THEN
         DA    EXIT
*
*    'RP@'   ( --- RP )
*
         HEX   83
         DCI   'RP@'
         DA    REPEAT-9
RPAT     DA    RPAT+2
         STX   XSAVE
         TSX
         TXA
         LDX   XSAVE
         JMP   PUSH0A
*
*    'ROLL'  ( N --- )
*
         HEX   84
         DCI   'ROLL'
         DA    RPAT-6
ROLL     DA    DOCOLON
         DA    DUP
         DA    ONE
         DA    LESS
         DA    AABORTQ
         HEX   11
         ASC   'ROLL ARGUMENT < 1'
         DA    ONEP
         DA    DUP
         DA    PICK
         DA    SWAP
         DA    TWOSTAR
         DA    SPAT
         DA    PLUS
ROLL1    DA    DUP
         DA    TWOM
         DA    AT
         DA    OVER
         DA    STORE
         DA    TWOM
         DA    SPAT
         DA    OVER
         DA    ULESS
         DA    NOT
         DA    ZBRANCH
         DFB   ROLL1-*,>ROLL1-*
         DA    DDROP
         DA    EXIT
*
*    'ROT'  ( N1 N2 N3 --- N2 N3 N1 )
*
         HEX   83
         DCI   'ROT'
         DA    ROLL-7
ROT      DA    ROT+2
         LDA   $5,X
         PHA
         LDA   $4,X
         PHA
         LDA   $3,X
         STA   $5,X
         LDA   $2,X
         STA   $4,X
         LDA   $1,X
         STA   $3,X
         LDA   $0,X
         STA   $2,X
         PLA
         STA   $0,X
         PLA
         STA   $1,X
         JMP   NEXT
*
*    'RP!'
*
         HEX   83
         DCI   'RP!'
         DA    ROT-6
RPSTORE  DA    RPSTORE+2
         STX   XSAVE      LOAD RETURN STACK POINTER
         LDY   #8         (MACHINE STACK POINTER) FROM
         LDA   (UAP),Y    USER VARIABLE 'R0'.
         TAX
         TXS
         LDX   XSAVE
         JMP   NEXT
